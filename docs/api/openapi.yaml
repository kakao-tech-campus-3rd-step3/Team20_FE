openapi: 3.0.3
info:
  title: K-Spot API
  description: |
    K-Spot은 한국의 드라마, 영화, K-POP 등 다양한 콘텐츠와 관련된 장소들을 추천하고 
    여행 계획을 생성할 수 있는 서비스입니다.

    ## 주요 기능
    - 인기 콘텐츠 조회
    - 콘텐츠 상세 정보 조회
    - 콘텐츠 관련 장소 조회
    - 장소 상세 정보 조회
    - 여행 계획 생성 및 조회

    ## 공통 응답 형식
    모든 API는 표준화된 응답 형식을 사용합니다.
  version: 1.0.0
  contact:
    name: K-Spot API Support
    email: support@kspot.com
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT

servers:
  - url: https://d2d0fud3w2c5j6.cloudfront.net
    description: Production server
  - url: https://dev-api.kspot.com
    description: Development server

tags:
  - name: Contents
    description: 콘텐츠 관련 API
  - name: Locations
    description: 장소 관련 API
  - name: Itineraries
    description: 여행 계획 관련 API

paths:
  /contents:
    get:
      tags:
        - Contents
      summary: 인기 콘텐츠 Top 10 조회
      description: 인기 콘텐츠 Top 10 목록을 인기순으로 조회합니다.
      parameters:
        - name: category
          in: query
          description: 카테고리별 필터링 (선택사항). 지정하지 않으면 모든 카테고리의 인기 콘텐츠를 반환합니다.
          required: false
          schema:
            type: string
            enum: [DRAMA, MOVIE, POP]
            example: DRAMA
      responses:
        '200':
          description: 인기 콘텐츠 조회 성공
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PopularContentsResponse'
              examples:
                success:
                  summary: 성공 응답 예시
                  value:
                    status: 200
                    message: '인기 콘텐츠 Top 10 조회 성공'
                    data:
                      - contentId: 1
                        title: '이두나'
                        posterImageUrl: 'https://github.com/Jaeho-Site/mock-test-images/blob/main/k-drama-doona.webp?raw=true'
                      - contentId: 2
                        title: '이태원 클라스'
                        posterImageUrl: 'https://github.com/Jaeho-Site/mock-test-images/blob/main/k-drama-itaewonClass.webp?raw=true'
        '500':
          description: 서버 내부 오류
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /contents/{contentId}:
    get:
      tags:
        - Contents
      summary: 콘텐츠 상세 정보 조회
      description: ID를 사용하여 특정 콘텐츠의 상세 정보를 조회합니다.
      parameters:
        - name: contentId
          in: path
          description: 콘텐츠의 고유 ID
          required: true
          schema:
            type: integer
            example: 1
      responses:
        '200':
          description: 콘텐츠 상세 정보 조회 성공
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContentDetailResponse'
              examples:
                success:
                  summary: 성공 응답 예시
                  value:
                    status: 200
                    message: '콘텐츠 상세 정보 조회 성공'
                    data:
                      contentId: 1
                      category: 'DRAMA'
                      title: '이두나'
                      releaseDate: '2024-03-09'
                      posterImageUrl: 'https://github.com/Jaeho-Site/mock-test-images/blob/main/k-drama-doona-horizontal.jpg?raw=true'
                      posterImageUrlVertical: 'https://github.com/Jaeho-Site/mock-test-images/blob/main/k-drama-doona.webp?raw=true'
                      description: "평범한 대학생인 '이원준'이 은퇴한 전직 아이돌 '이두나'가 사는 셰어하우스에 살게 되면서 벌어지는 로맨스 이야기"
                      artists:
                        - artistId: 201
                          name: '수지'
                        - artistId: 202
                          name: '양세종'
        '404':
          description: 콘텐츠를 찾을 수 없음
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: 서버 내부 오류
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /contents/{contentId}/related-locations:
    get:
      tags:
        - Contents
      summary: 콘텐츠 관련 장소 조회
      description: 특정 콘텐츠와 관련된 모든 장소 목록을 조회합니다.
      parameters:
        - name: contentId
          in: path
          description: 콘텐츠의 고유 ID
          required: true
          schema:
            type: integer
            example: 1
      responses:
        '200':
          description: 콘텐츠 관련 장소 조회 성공
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RelatedLocationsResponse'
              examples:
                success:
                  summary: 성공 응답 예시
                  value:
                    status: 200
                    message: '콘텐츠 관련 장소 조회 성공'
                    data:
                      - location_id: 102
                        name: '소피텔 앰배서더 서울'
                        scene_description: '석촌호수 전망의 5성급 럭셔리 호텔입니다.'
                        location_image_url: 'https://github.com/Jaeho-Site/mock-test-images/blob/main/102-%EC%87%BC%ED%94%BC%EB%8D%94%ED%98%B8%ED%85%94.png?raw=true'
                        contentId: 1
        '404':
          description: 콘텐츠를 찾을 수 없음
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: 서버 내부 오류
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /locations/{locationId}:
    get:
      tags:
        - Locations
      summary: 장소 상세 정보 조회
      description: ID를 사용하여 특정 장소의 상세 정보를 조회합니다.
      parameters:
        - name: locationId
          in: path
          description: 장소의 고유 ID
          required: true
          schema:
            type: integer
            example: 101
      responses:
        '200':
          description: 장소 상세 정보 조회 성공
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LocationDetailResponse'
              examples:
                success:
                  summary: 성공 응답 예시
                  value:
                    status: 200
                    message: '장소 상세 조회 성공'
                    data:
                      locationId: 101
                      name: '더현대 서울'
                      address: '서울 영등포구 여의대로 108'
                      latitude: 37.5258
                      longitude: 126.9285
                      description: 'MZ세대의 성지로 불리는 서울의 대표적인 백화점입니다.'
                      locationImage: 'https://github.com/Jaeho-Site/mock-test-images/blob/main/101-%EB%8D%94%ED%98%84%EB%8C%80%EC%84%9C%EC%9A%B8.png?raw=true'
                      relatedContents:
                        - contentId: 4
                          title: 'BTS'
                          category: 'POP'
                        - contentId: 5
                          title: '오징어게임'
                          category: 'DRAMA'
        '404':
          description: 장소를 찾을 수 없음
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: 서버 내부 오류
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /itineraries:
    get:
      tags:
        - Itineraries
      summary: 모든 여행 계획 조회
      description: 사용자의 모든 여행 계획 목록을 조회합니다.
      responses:
        '200':
          description: 여행 계획 목록 조회 성공
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ItinerariesListResponse'
              examples:
                success:
                  summary: 성공 응답 예시
                  value:
                    status: 200
                    message: '모든 여행 계획 조회 성공'
                    data:
                      count: 3
                      itineraries:
                        - createdAt: '2025-09-29T07:30:53.387784Z'
                          itineraryId: '36174360-f244-4207-b808-a6a71d58f4ac'
                          title: '쌍문동 백운시장에서 시작하는 랜덤 투어'
                        - createdAt: '2025-09-29T07:42:42.475639Z'
                          itineraryId: '15a210e2-f06e-45d4-91e3-f6d013cc97d3'
                          title: '랜덤 생성 여행 28'
        '500':
          description: 서버 내부 오류
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

    post:
      tags:
        - Itineraries
      summary: 새로운 여행 계획 생성
      description: 새로운 여행 계획을 생성합니다.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateItineraryRequest'
            examples:
              create_request:
                summary: 여행 계획 생성 요청 예시
                value:
                  title: '서울 드라마 촬영지 투어'
                  description: '인기 드라마 촬영지를 둘러보는 서울 투어'
                  locationIds: [101, 102, 103, 104, 105]
      responses:
        '201':
          description: 여행 계획 생성 성공
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ItineraryDetailResponse'
              examples:
                success:
                  summary: 생성 성공 응답 예시
                  value:
                    status: 201
                    message: '여행 계획이 성공적으로 생성되었습니다'
                    data:
                      itineraryId: '36174360-f244-4207-b808-a6a71d58f4ac'
                      title: '서울 드라마 촬영지 투어'
                      description: '인기 드라마 촬영지를 둘러보는 서울 투어'
                      createdAt: '2025-09-29T07:30:53.387784Z'
                      userId: 'test-user-123'
                      locations:
                        - locationId: 105
                          name: '쌍문동 백운시장'
                          address: '서울 도봉구 우이천로 336'
                          visitOrder: 1
        '400':
          description: 잘못된 요청
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: 서버 내부 오류
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /itineraries/{itineraryId}:
    get:
      tags:
        - Itineraries
      summary: 여행 계획 상세 조회
      description: 특정 여행 계획의 상세 정보를 조회합니다.
      parameters:
        - name: itineraryId
          in: path
          description: 여행 계획의 고유 ID
          required: true
          schema:
            type: string
            format: uuid
            example: '36174360-f244-4207-b808-a6a71d58f4ac'
      responses:
        '200':
          description: 여행 계획 상세 조회 성공
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ItineraryDetailResponse'
              examples:
                success:
                  summary: 성공 응답 예시
                  value:
                    status: 200
                    message: '여행 계획 상세 조회 성공'
                    data:
                      locations:
                        - locationId: 105
                          name: '쌍문동 백운시장'
                          address: '서울 도봉구 우이천로 336'
                          visitOrder: 1
                        - locationId: 102
                          name: '소피텔 앰배서더 서울'
                          address: '서울 송파구 잠실로 209'
                          visitOrder: 2
                      createdAt: '2025-09-29T07:30:53.387784Z'
                      description: '5개의 멋진 장소를 둘러보는 여행입니다.'
                      userId: 'test-user-123'
                      itineraryId: '36174360-f244-4207-b808-a6a71d58f4ac'
                      title: '쌍문동 백운시장에서 시작하는 랜덤 투어'
                      user:
                        userId: 'test-user-123'
                        nickname: '테스트유저'
        '404':
          description: 여행 계획을 찾을 수 없음
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: 서버 내부 오류
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

components:
  schemas:
    # 공통 응답 스키마
    BaseResponse:
      type: object
      required:
        - status
        - message
      properties:
        status:
          type: integer
          description: HTTP 상태 코드
          example: 200
        message:
          type: string
          description: 요청 처리 결과에 대한 메시지
          example: '요청 성공'

    ErrorResponse:
      allOf:
        - $ref: '#/components/schemas/BaseResponse'
        - type: object
          properties:
            code:
              type: string
              description: 오류 코드
              example: 'NOT_FOUND_CONTENT'
            data:
              nullable: true
              description: 오류 시 데이터는 null
              example: null

    # 콘텐츠 관련 스키마
    PopularContent:
      type: object
      required:
        - contentId
        - title
        - posterImageUrl
      properties:
        contentId:
          type: integer
          description: 콘텐츠 고유 ID
          example: 1
        title:
          type: string
          description: 콘텐츠 제목
          example: '이두나'
        posterImageUrl:
          type: string
          format: uri
          description: 포스터 이미지 URL
          example: 'https://github.com/Jaeho-Site/mock-test-images/blob/main/k-drama-doona.webp?raw=true'

    PopularContentsResponse:
      allOf:
        - $ref: '#/components/schemas/BaseResponse'
        - type: object
          properties:
            data:
              type: array
              items:
                $ref: '#/components/schemas/PopularContent'
              description: 인기 콘텐츠 목록 (최대 10개)

    Artist:
      type: object
      required:
        - artistId
        - name
      properties:
        artistId:
          type: integer
          description: 아티스트 고유 ID
          example: 201
        name:
          type: string
          description: 아티스트 이름
          example: '수지'

    ContentDetail:
      type: object
      required:
        - contentId
        - category
        - title
        - releaseDate
        - posterImageUrl
        - posterImageUrlVertical
        - description
        - artists
      properties:
        contentId:
          type: integer
          description: 콘텐츠 고유 ID
          example: 1
        category:
          type: string
          enum: [DRAMA, MOVIE, POP]
          description: 콘텐츠 카테고리
          example: 'DRAMA'
        title:
          type: string
          description: 콘텐츠 제목
          example: '이두나'
        releaseDate:
          type: string
          format: date
          description: 개봉일
          example: '2024-03-09'
        posterImageUrl:
          type: string
          format: uri
          description: 가로형 포스터 이미지 URL
          example: 'https://github.com/Jaeho-Site/mock-test-images/blob/main/k-drama-doona-horizontal.jpg?raw=true'
        posterImageUrlVertical:
          type: string
          format: uri
          description: 세로형 포스터 이미지 URL
          example: 'https://github.com/Jaeho-Site/mock-test-images/blob/main/k-drama-doona.webp?raw=true'
        description:
          type: string
          description: 콘텐츠 설명
          example: "평범한 대학생인 '이원준'이 은퇴한 전직 아이돌 '이두나'가 사는 셰어하우스에 살게 되면서 벌어지는 로맨스 이야기"
        artists:
          type: array
          items:
            $ref: '#/components/schemas/Artist'
          description: 출연진 목록

    ContentDetailResponse:
      allOf:
        - $ref: '#/components/schemas/BaseResponse'
        - type: object
          properties:
            data:
              $ref: '#/components/schemas/ContentDetail'

    RelatedLocation:
      type: object
      required:
        - location_id
        - name
        - scene_description
        - location_image_url
        - contentId
      properties:
        location_id:
          type: integer
          description: 장소 고유 ID
          example: 102
        name:
          type: string
          description: 장소 이름
          example: '소피텔 앰배서더 서울'
        scene_description:
          type: string
          description: 촬영 장면 설명
          example: '석촌호수 전망의 5성급 럭셔리 호텔입니다.'
        location_image_url:
          type: string
          format: uri
          description: 장소 이미지 URL
          example: 'https://github.com/Jaeho-Site/mock-test-images/blob/main/102-%EC%87%BC%ED%94%BC%EB%8D%94%ED%98%B8%ED%85%94.png?raw=true'
        contentId:
          type: integer
          description: 관련 콘텐츠 ID
          example: 1

    RelatedLocationsResponse:
      allOf:
        - $ref: '#/components/schemas/BaseResponse'
        - type: object
          properties:
            data:
              type: array
              items:
                $ref: '#/components/schemas/RelatedLocation'
              description: 관련 장소 목록

    # 장소 관련 스키마
    RelatedContent:
      type: object
      required:
        - contentId
        - title
        - category
      properties:
        contentId:
          type: integer
          description: 콘텐츠 고유 ID
          example: 4
        title:
          type: string
          description: 콘텐츠 제목
          example: 'BTS'
        category:
          type: string
          enum: [DRAMA, MOVIE, POP]
          description: 콘텐츠 카테고리
          example: 'POP'

    LocationDetail:
      type: object
      required:
        - locationId
        - name
        - address
        - latitude
        - longitude
        - description
        - locationImage
        - relatedContents
      properties:
        locationId:
          type: integer
          description: 장소 고유 ID
          example: 101
        name:
          type: string
          description: 장소 이름
          example: '더현대 서울'
        address:
          type: string
          description: 장소 주소
          example: '서울 영등포구 여의대로 108'
        latitude:
          type: number
          format: float
          description: 위도
          example: 37.5258
        longitude:
          type: number
          format: float
          description: 경도
          example: 126.9285
        description:
          type: string
          description: 장소 설명
          example: 'MZ세대의 성지로 불리는 서울의 대표적인 백화점입니다.'
        locationImage:
          type: string
          format: uri
          description: 장소 이미지 URL
          example: 'https://github.com/Jaeho-Site/mock-test-images/blob/main/101-%EB%8D%94%ED%98%84%EB%8C%80%EC%84%9C%EC%9A%B8.png?raw=true'
        relatedContents:
          type: array
          items:
            $ref: '#/components/schemas/RelatedContent'
          description: 관련 콘텐츠 목록

    LocationDetailResponse:
      allOf:
        - $ref: '#/components/schemas/BaseResponse'
        - type: object
          properties:
            data:
              $ref: '#/components/schemas/LocationDetail'

    # 여행 계획 관련 스키마
    ItinerarySummary:
      type: object
      required:
        - createdAt
        - itineraryId
        - title
      properties:
        createdAt:
          type: string
          format: date-time
          description: 생성일시
          example: '2025-09-29T07:30:53.387784Z'
        itineraryId:
          type: string
          format: uuid
          description: 여행 계획 고유 ID
          example: '36174360-f244-4207-b808-a6a71d58f4ac'
        title:
          type: string
          description: 여행 계획 제목
          example: '쌍문동 백운시장에서 시작하는 랜덤 투어'

    ItinerariesListResponse:
      allOf:
        - $ref: '#/components/schemas/BaseResponse'
        - type: object
          properties:
            data:
              type: object
              required:
                - count
                - itineraries
              properties:
                count:
                  type: integer
                  description: 여행 계획 총 개수
                  example: 3
                itineraries:
                  type: array
                  items:
                    $ref: '#/components/schemas/ItinerarySummary'
                  description: 여행 계획 목록

    CreateItineraryRequest:
      type: object
      required:
        - title
        - locationIds
      properties:
        title:
          type: string
          description: 여행 계획 제목
          example: '서울 드라마 촬영지 투어'
          maxLength: 100
        description:
          type: string
          description: 여행 계획 설명
          example: '인기 드라마 촬영지를 둘러보는 서울 투어'
          maxLength: 500
        locationIds:
          type: array
          items:
            type: integer
          description: 방문할 장소 ID 목록
          example: [101, 102, 103, 104, 105]
          minItems: 1
          maxItems: 10

    ItineraryLocation:
      type: object
      required:
        - locationId
        - name
        - address
        - visitOrder
      properties:
        locationId:
          type: integer
          description: 장소 고유 ID
          example: 105
        name:
          type: string
          description: 장소 이름
          example: '쌍문동 백운시장'
        address:
          type: string
          description: 장소 주소
          example: '서울 도봉구 우이천로 336'
        visitOrder:
          type: integer
          description: 방문 순서
          example: 1

    User:
      type: object
      required:
        - userId
        - nickname
      properties:
        userId:
          type: string
          description: 사용자 고유 ID
          example: 'test-user-123'
        nickname:
          type: string
          description: 사용자 닉네임
          example: '테스트유저'

    ItineraryDetail:
      type: object
      required:
        - locations
        - createdAt
        - description
        - userId
        - itineraryId
        - title
        - user
      properties:
        locations:
          type: array
          items:
            $ref: '#/components/schemas/ItineraryLocation'
          description: 방문할 장소 목록
        createdAt:
          type: string
          format: date-time
          description: 생성일시
          example: '2025-09-29T07:30:53.387784Z'
        description:
          type: string
          description: 여행 계획 설명
          example: '5개의 멋진 장소를 둘러보는 여행입니다.'
        userId:
          type: string
          description: 사용자 고유 ID
          example: 'test-user-123'
        itineraryId:
          type: string
          format: uuid
          description: 여행 계획 고유 ID
          example: '36174360-f244-4207-b808-a6a71d58f4ac'
        title:
          type: string
          description: 여행 계획 제목
          example: '쌍문동 백운시장에서 시작하는 랜덤 투어'
        user:
          $ref: '#/components/schemas/User'

    ItineraryDetailResponse:
      allOf:
        - $ref: '#/components/schemas/BaseResponse'
        - type: object
          properties:
            data:
              $ref: '#/components/schemas/ItineraryDetail'

  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
      description: JWT 토큰을 사용한 인증

security:
  - BearerAuth: []
